{
  "swagger": "2.0",
  "info": {
    "title": "v1alpha/core.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CheckPermission"
    },
    {
      "name": "LicenseService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1alpha/check": {
      "post": {
        "operationId": "CheckPermission_CheckPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaCheckPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaCheckPermissionRequest"
            }
          }
        ],
        "tags": [
          "CheckPermission"
        ]
      }
    },
    "/v1alpha/orgs/{orgId}/entitlements/{serviceId}": {
      "post": {
        "operationId": "LicenseService_EntitleOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaEntitleOrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "description": "the ID of an org to entitle",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "maxSeats": {
                  "type": "string",
                  "format": "int64",
                  "description": "the amount of seats that are granted for this org."
                }
              },
              "title": "EntitleOrgRequest"
            }
          }
        ],
        "tags": [
          "LicenseService"
        ]
      }
    },
    "/v1alpha/orgs/{orgId}/licenses/{serviceId}": {
      "get": {
        "operationId": "LicenseService_GetLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetLicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "description": "The id of an license-able organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "description": "A \"serviceId\" is an arbitrary identifier for a service with limited access that may be granted to an organization.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LicenseService"
        ]
      },
      "post": {
        "operationId": "LicenseService_ModifySeats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaModifySeatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "description": "The id of an license-able organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "description": "A \"serviceId\" is an arbitrary identifier for a service with limited access that may be granted to an organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "assign": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "User IDs to assign to the license."
                },
                "unassign": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "User IDs to remove from the license."
                }
              },
              "description": "ModifySeatsRequest assuming we get the userId etc from the requester in the authorization header to validate if an \"admin\" can actually add licenses."
            }
          }
        ],
        "tags": [
          "LicenseService"
        ]
      }
    },
    "/v1alpha/orgs/{orgId}/licenses/{serviceId}/seats": {
      "get": {
        "operationId": "LicenseService_GetSeats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetSeatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "description": "The id of an license-able organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "description": "A \"serviceId\" is an arbitrary identifier for a service with limited access that may be granted to an organization.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeUsers",
            "description": "true: include enriched user representation. false: do not include (only IDs). Default: true.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter",
            "description": "filter, either assigned or assignable users returned. Default: assigned.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "assigned",
              "assignable"
            ],
            "default": "assigned"
          }
        ],
        "tags": [
          "LicenseService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alphaCheckPermissionRequest": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "resourcetype": {
          "type": "string"
        },
        "resourceid": {
          "type": "string"
        }
      }
    },
    "v1alphaCheckPermissionResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1alphaEntitleOrgResponse": {
      "type": "object",
      "title": "EntitleOrgResponse is the response when entitling an org"
    },
    "v1alphaGetLicenseResponse": {
      "type": "object",
      "properties": {
        "seatsTotal": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of seats assignable."
        },
        "seatsAvailable": {
          "type": "integer",
          "format": "int32",
          "description": "Current number of available seats which can be assigned."
        }
      }
    },
    "v1alphaGetSeatsResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alphaGetSeatsUserRepresentation"
          },
          "description": "Just user IDs, unless \"includeUsers\" = true."
        }
      }
    },
    "v1alphaGetSeatsUserRepresentation": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "assigned": {
          "type": "boolean"
        }
      },
      "description": "we may return more userinfo, this is a starting point."
    },
    "v1alphaModifySeatsResponse": {
      "type": "object"
    },
    "v1alphaSeatFilterType": {
      "type": "string",
      "enum": [
        "assigned",
        "assignable"
      ],
      "default": "assigned"
    }
  }
}
