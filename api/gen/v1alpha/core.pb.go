// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: v1alpha/core.proto

// Additional imports go here

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeatFilterType int32

const (
	SeatFilterType_assigned   SeatFilterType = 0
	SeatFilterType_assignable SeatFilterType = 1
)

// Enum value maps for SeatFilterType.
var (
	SeatFilterType_name = map[int32]string{
		0: "assigned",
		1: "assignable",
	}
	SeatFilterType_value = map[string]int32{
		"assigned":   0,
		"assignable": 1,
	}
)

func (x SeatFilterType) Enum() *SeatFilterType {
	p := new(SeatFilterType)
	*p = x
	return p
}

func (x SeatFilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeatFilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1alpha_core_proto_enumTypes[0].Descriptor()
}

func (SeatFilterType) Type() protoreflect.EnumType {
	return &file_v1alpha_core_proto_enumTypes[0]
}

func (x SeatFilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeatFilterType.Descriptor instead.
func (SeatFilterType) EnumDescriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{0}
}

type CheckPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject      string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Operation    string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Resourcetype string `protobuf:"bytes,3,opt,name=resourcetype,proto3" json:"resourcetype,omitempty"`
	Resourceid   string `protobuf:"bytes,4,opt,name=resourceid,proto3" json:"resourceid,omitempty"`
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{0}
}

func (x *CheckPermissionRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CheckPermissionRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *CheckPermissionRequest) GetResourcetype() string {
	if x != nil {
		return x.Resourcetype
	}
	return ""
}

func (x *CheckPermissionRequest) GetResourceid() string {
	if x != nil {
		return x.Resourceid
	}
	return ""
}

type CheckPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      bool   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{1}
}

func (x *CheckPermissionResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *CheckPermissionResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`         // The id of an license-able organization.
	ServiceId string `protobuf:"bytes,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"` // A "serviceId" is an arbitrary identifier for a service with limited access that may be granted to an organization.
}

func (x *GetLicenseRequest) Reset() {
	*x = GetLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicenseRequest) ProtoMessage() {}

func (x *GetLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicenseRequest.ProtoReflect.Descriptor instead.
func (*GetLicenseRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{2}
}

func (x *GetLicenseRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetLicenseRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type GetLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatsTotal     int32 `protobuf:"zigzag32,1,opt,name=seatsTotal,proto3" json:"seatsTotal,omitempty"`         // Total number of seats assignable.
	SeatsAvailable int32 `protobuf:"zigzag32,2,opt,name=seatsAvailable,proto3" json:"seatsAvailable,omitempty"` // Current number of available seats which can be assigned.
}

func (x *GetLicenseResponse) Reset() {
	*x = GetLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicenseResponse) ProtoMessage() {}

func (x *GetLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicenseResponse.ProtoReflect.Descriptor instead.
func (*GetLicenseResponse) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{3}
}

func (x *GetLicenseResponse) GetSeatsTotal() int32 {
	if x != nil {
		return x.SeatsTotal
	}
	return 0
}

func (x *GetLicenseResponse) GetSeatsAvailable() int32 {
	if x != nil {
		return x.SeatsAvailable
	}
	return 0
}

// ModifySeatsRequest assuming we get the userId etc from the requester in the authorization header to validate if an "admin" can actually add licenses.
type ModifySeatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string   `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`         // The id of an license-able organization.
	ServiceId string   `protobuf:"bytes,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"` // A "serviceId" is an arbitrary identifier for a service with limited access that may be granted to an organization.
	Assign    []string `protobuf:"bytes,3,rep,name=assign,proto3" json:"assign,omitempty"`       // User IDs to assign to the license.
	Unassign  []string `protobuf:"bytes,4,rep,name=unassign,proto3" json:"unassign,omitempty"`   // User IDs to remove from the license.
}

func (x *ModifySeatsRequest) Reset() {
	*x = ModifySeatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifySeatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifySeatsRequest) ProtoMessage() {}

func (x *ModifySeatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifySeatsRequest.ProtoReflect.Descriptor instead.
func (*ModifySeatsRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{4}
}

func (x *ModifySeatsRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ModifySeatsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ModifySeatsRequest) GetAssign() []string {
	if x != nil {
		return x.Assign
	}
	return nil
}

func (x *ModifySeatsRequest) GetUnassign() []string {
	if x != nil {
		return x.Unassign
	}
	return nil
}

type ModifySeatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifySeatsResponse) Reset() {
	*x = ModifySeatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifySeatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifySeatsResponse) ProtoMessage() {}

func (x *ModifySeatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifySeatsResponse.ProtoReflect.Descriptor instead.
func (*ModifySeatsResponse) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{5}
}

type GetSeatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId        string          `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`                                          // The id of an license-able organization.
	ServiceId    string          `protobuf:"bytes,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"`                                  // A "serviceId" is an arbitrary identifier for a service with limited access that may be granted to an organization.
	IncludeUsers *bool           `protobuf:"varint,3,opt,name=includeUsers,proto3,oneof" json:"includeUsers,omitempty"`                     // true: include enriched user representation. false: do not include (only IDs). Default: true.
	Filter       *SeatFilterType `protobuf:"varint,4,opt,name=filter,proto3,enum=api.v1alpha.SeatFilterType,oneof" json:"filter,omitempty"` // filter, either assigned or assignable users returned. Default: assigned.
}

func (x *GetSeatsRequest) Reset() {
	*x = GetSeatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatsRequest) ProtoMessage() {}

func (x *GetSeatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatsRequest.ProtoReflect.Descriptor instead.
func (*GetSeatsRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{6}
}

func (x *GetSeatsRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetSeatsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *GetSeatsRequest) GetIncludeUsers() bool {
	if x != nil && x.IncludeUsers != nil {
		return *x.IncludeUsers
	}
	return false
}

func (x *GetSeatsRequest) GetFilter() SeatFilterType {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return SeatFilterType_assigned
}

type GetSeatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*GetSeatsUserRepresentation `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"` // Just user IDs, unless "includeUsers" = true.
}

func (x *GetSeatsResponse) Reset() {
	*x = GetSeatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatsResponse) ProtoMessage() {}

func (x *GetSeatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatsResponse.ProtoReflect.Descriptor instead.
func (*GetSeatsResponse) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{7}
}

func (x *GetSeatsResponse) GetUsers() []*GetSeatsUserRepresentation {
	if x != nil {
		return x.Users
	}
	return nil
}

// we may return more userinfo, this is a starting point.
type GetSeatsUserRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Assigned    bool   `protobuf:"varint,3,opt,name=assigned,proto3" json:"assigned,omitempty"`
}

func (x *GetSeatsUserRepresentation) Reset() {
	*x = GetSeatsUserRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatsUserRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatsUserRepresentation) ProtoMessage() {}

func (x *GetSeatsUserRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatsUserRepresentation.ProtoReflect.Descriptor instead.
func (*GetSeatsUserRepresentation) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{8}
}

func (x *GetSeatsUserRepresentation) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *GetSeatsUserRepresentation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSeatsUserRepresentation) GetAssigned() bool {
	if x != nil {
		return x.Assigned
	}
	return false
}

// EntitleOrgRequest
type EntitleOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"` // the ID of an org to entitle
	ServiceId string `protobuf:"bytes,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	MaxSeats  int64  `protobuf:"varint,3,opt,name=maxSeats,proto3" json:"maxSeats,omitempty"` // the amount of seats that are granted for this org.
}

func (x *EntitleOrgRequest) Reset() {
	*x = EntitleOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitleOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitleOrgRequest) ProtoMessage() {}

func (x *EntitleOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitleOrgRequest.ProtoReflect.Descriptor instead.
func (*EntitleOrgRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{9}
}

func (x *EntitleOrgRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *EntitleOrgRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EntitleOrgRequest) GetMaxSeats() int64 {
	if x != nil {
		return x.MaxSeats
	}
	return 0
}

// EntitleOrgResponse is the response when entitling an org
type EntitleOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EntitleOrgResponse) Reset() {
	*x = EntitleOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitleOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitleOrgResponse) ProtoMessage() {}

func (x *EntitleOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitleOrgResponse.ProtoReflect.Descriptor instead.
func (*EntitleOrgResponse) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{10}
}

// ImportOrgRequest to trigger an import for an orgs users into spicedb
type ImportOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"` // the ID of an org to entitle
}

func (x *ImportOrgRequest) Reset() {
	*x = ImportOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportOrgRequest) ProtoMessage() {}

func (x *ImportOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportOrgRequest.ProtoReflect.Descriptor instead.
func (*ImportOrgRequest) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{11}
}

func (x *ImportOrgRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// ImportOrgResponse
type ImportOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportedUsersCount    uint64 `protobuf:"varint,1,opt,name=importedUsersCount,proto3" json:"importedUsersCount,omitempty"`
	NotImportedUsersCount uint64 `protobuf:"varint,2,opt,name=notImportedUsersCount,proto3" json:"notImportedUsersCount,omitempty"`
}

func (x *ImportOrgResponse) Reset() {
	*x = ImportOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1alpha_core_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportOrgResponse) ProtoMessage() {}

func (x *ImportOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1alpha_core_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportOrgResponse.ProtoReflect.Descriptor instead.
func (*ImportOrgResponse) Descriptor() ([]byte, []int) {
	return file_v1alpha_core_proto_rawDescGZIP(), []int{12}
}

func (x *ImportOrgResponse) GetImportedUsersCount() uint64 {
	if x != nil {
		return x.ImportedUsersCount
	}
	return 0
}

func (x *ImportOrgResponse) GetNotImportedUsersCount() uint64 {
	if x != nil {
		return x.NotImportedUsersCount
	}
	return 0
}

var File_v1alpha_core_proto protoreflect.FileDescriptor

var file_v1alpha_core_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x61, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x65, 0x61, 0x74, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0x7c, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x65,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x65, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x22, 0x6a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x22,
	0x63, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x53,
	0x65, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53,
	0x65, 0x61, 0x74, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4f,
	0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x6f, 0x74,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x6e, 0x6f, 0x74, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a,
	0x2e, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x32,
	0x71, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0xd1, 0x02, 0x0a, 0x0e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x65, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x4f, 0x72, 0x67, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x5d, 0x0a, 0x0d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x67, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x65, 0x64, 0x48, 0x61, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1alpha_core_proto_rawDescOnce sync.Once
	file_v1alpha_core_proto_rawDescData = file_v1alpha_core_proto_rawDesc
)

func file_v1alpha_core_proto_rawDescGZIP() []byte {
	file_v1alpha_core_proto_rawDescOnce.Do(func() {
		file_v1alpha_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1alpha_core_proto_rawDescData)
	})
	return file_v1alpha_core_proto_rawDescData
}

var file_v1alpha_core_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1alpha_core_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_v1alpha_core_proto_goTypes = []interface{}{
	(SeatFilterType)(0),                // 0: api.v1alpha.SeatFilterType
	(*CheckPermissionRequest)(nil),     // 1: api.v1alpha.CheckPermissionRequest
	(*CheckPermissionResponse)(nil),    // 2: api.v1alpha.CheckPermissionResponse
	(*GetLicenseRequest)(nil),          // 3: api.v1alpha.GetLicenseRequest
	(*GetLicenseResponse)(nil),         // 4: api.v1alpha.GetLicenseResponse
	(*ModifySeatsRequest)(nil),         // 5: api.v1alpha.ModifySeatsRequest
	(*ModifySeatsResponse)(nil),        // 6: api.v1alpha.ModifySeatsResponse
	(*GetSeatsRequest)(nil),            // 7: api.v1alpha.GetSeatsRequest
	(*GetSeatsResponse)(nil),           // 8: api.v1alpha.GetSeatsResponse
	(*GetSeatsUserRepresentation)(nil), // 9: api.v1alpha.GetSeatsUserRepresentation
	(*EntitleOrgRequest)(nil),          // 10: api.v1alpha.EntitleOrgRequest
	(*EntitleOrgResponse)(nil),         // 11: api.v1alpha.EntitleOrgResponse
	(*ImportOrgRequest)(nil),           // 12: api.v1alpha.ImportOrgRequest
	(*ImportOrgResponse)(nil),          // 13: api.v1alpha.ImportOrgResponse
}
var file_v1alpha_core_proto_depIdxs = []int32{
	0,  // 0: api.v1alpha.GetSeatsRequest.filter:type_name -> api.v1alpha.SeatFilterType
	9,  // 1: api.v1alpha.GetSeatsResponse.users:type_name -> api.v1alpha.GetSeatsUserRepresentation
	1,  // 2: api.v1alpha.CheckPermission.CheckPermission:input_type -> api.v1alpha.CheckPermissionRequest
	3,  // 3: api.v1alpha.LicenseService.GetLicense:input_type -> api.v1alpha.GetLicenseRequest
	5,  // 4: api.v1alpha.LicenseService.ModifySeats:input_type -> api.v1alpha.ModifySeatsRequest
	7,  // 5: api.v1alpha.LicenseService.GetSeats:input_type -> api.v1alpha.GetSeatsRequest
	10, // 6: api.v1alpha.LicenseService.EntitleOrg:input_type -> api.v1alpha.EntitleOrgRequest
	12, // 7: api.v1alpha.ImportService.ImportOrg:input_type -> api.v1alpha.ImportOrgRequest
	2,  // 8: api.v1alpha.CheckPermission.CheckPermission:output_type -> api.v1alpha.CheckPermissionResponse
	4,  // 9: api.v1alpha.LicenseService.GetLicense:output_type -> api.v1alpha.GetLicenseResponse
	6,  // 10: api.v1alpha.LicenseService.ModifySeats:output_type -> api.v1alpha.ModifySeatsResponse
	8,  // 11: api.v1alpha.LicenseService.GetSeats:output_type -> api.v1alpha.GetSeatsResponse
	11, // 12: api.v1alpha.LicenseService.EntitleOrg:output_type -> api.v1alpha.EntitleOrgResponse
	13, // 13: api.v1alpha.ImportService.ImportOrg:output_type -> api.v1alpha.ImportOrgResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_v1alpha_core_proto_init() }
func file_v1alpha_core_proto_init() {
	if File_v1alpha_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1alpha_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifySeatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifySeatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeatsUserRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitleOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitleOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1alpha_core_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1alpha_core_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1alpha_core_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_v1alpha_core_proto_goTypes,
		DependencyIndexes: file_v1alpha_core_proto_depIdxs,
		EnumInfos:         file_v1alpha_core_proto_enumTypes,
		MessageInfos:      file_v1alpha_core_proto_msgTypes,
	}.Build()
	File_v1alpha_core_proto = out.File
	file_v1alpha_core_proto_rawDesc = nil
	file_v1alpha_core_proto_goTypes = nil
	file_v1alpha_core_proto_depIdxs = nil
}
