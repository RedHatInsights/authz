{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "v1alpha/core.proto",
    "version" : "version not set"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "tags" : [ {
    "name" : "CheckPermission"
  }, {
    "name" : "SeatsService"
  } ],
  "paths" : {
    "/v1alpha/license/seats" : {
      "get" : {
        "tags" : [ "SeatsService" ],
        "operationId" : "SeatsService_GetSeats",
        "parameters" : [ {
          "name" : "tenantId",
          "in" : "query",
          "description" : "tenant to get seats for",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceId",
          "in" : "query",
          "description" : "service/productlicense to get seats for",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeUsers",
          "in" : "query",
          "description" : "true: include encriched user representation. false: do not include. Default: true.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "filter, either licensed or unlicensed users returned. Default: licensed. Note: Default values are not supported anymore in proto3, check serverside i guess.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "licensed",
            "enum" : [ "licensed", "unlicensed" ]
          }
        }, {
          "name" : "includeLicenseInfo",
          "in" : "query",
          "description" : "include available and max seats of license. Default: True.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1alphaGetSeatsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SeatsService" ],
        "operationId" : "SeatsService_CreateSeats",
        "requestBody" : {
          "description" : "CreateSeatsRequest assuming we get the userId etc from the requestor in the authorization header to validate if an \"admin\" can actually add licenses.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1alphaModifySeatsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1alphaModifySeatsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      },
      "delete" : {
        "tags" : [ "SeatsService" ],
        "operationId" : "SeatsService_DeleteSeats",
        "requestBody" : {
          "description" : "CreateSeatsRequest assuming we get the userId etc from the requestor in the authorization header to validate if an \"admin\" can actually add licenses.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1alphaModifySeatsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1alphaModifySeatsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    },
    "/v1alpha/permissions/check" : {
      "post" : {
        "tags" : [ "CheckPermission" ],
        "operationId" : "CheckPermission_CheckPermission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/v1alphaCheckPermissionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A successful response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v1alphaCheckPermissionResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An unexpected error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "body"
      }
    }
  },
  "components" : {
    "schemas" : {
      "protobufAny" : {
        "type" : "object",
        "properties" : {
          "@type" : {
            "type" : "string"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "rpcStatus" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "details" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "v1alphaCheckPermissionRequest" : {
        "type" : "object",
        "properties" : {
          "subject" : {
            "type" : "string"
          },
          "operation" : {
            "type" : "string"
          },
          "resourcetype" : {
            "type" : "string"
          },
          "resourceid" : {
            "type" : "string"
          }
        }
      },
      "v1alphaCheckPermissionResponse" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "v1alphaGetSeatsCountResponse" : {
        "title" : "used sint64 after consulting https://protobuf.dev/programming-guides/proto/#scalar",
        "type" : "object",
        "properties" : {
          "seatsTotal" : {
            "type" : "string",
            "description" : "total seats.",
            "format" : "int64"
          },
          "seatsAvailable" : {
            "type" : "string",
            "description" : "currently available seats.",
            "format" : "int64"
          }
        }
      },
      "v1alphaGetSeatsResponse" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "title" : "empty is includeUsers = false, filled if includeUsers=true",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/v1alphaGetSeatsUserRepresentation"
            }
          },
          "licenseInfo" : {
            "$ref" : "#/components/schemas/v1alphaGetSeatsCountResponse"
          }
        }
      },
      "v1alphaGetSeatsUserRepresentation" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "isLicenseActive" : {
            "type" : "boolean"
          }
        },
        "description" : "we may return more userinfo, this is a starting point."
      },
      "v1alphaModifySeatsRequest" : {
        "type" : "object",
        "properties" : {
          "tenantId" : {
            "title" : "tenantId of subjects",
            "type" : "string"
          },
          "subjects" : {
            "title" : "list of subjects to add",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "serviceId" : {
            "title" : "id of service to add subjects to as \"licensed users\"",
            "type" : "string"
          }
        },
        "description" : "CreateSeatsRequest assuming we get the userId etc from the requestor in the authorization header to validate if an \"admin\" can actually add licenses."
      },
      "v1alphaModifySeatsResponse" : {
        "type" : "object"
      },
      "v1alphaSeatFilterType" : {
        "type" : "string",
        "default" : "licensed",
        "enum" : [ "licensed", "unlicensed" ]
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}